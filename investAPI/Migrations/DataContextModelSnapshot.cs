// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using investAPI.Data;

#nullable disable

namespace investAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("investAPI.Models.Reit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AveragePrice")
                        .HasColumnType("REAL");

                    b.Property<float>("CurrentQuote")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderType")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Profit")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Reits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AveragePrice = 10f,
                            CurrentQuote = 15f,
                            Date = new DateTime(2001, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = 1,
                            Profit = 10f,
                            Quantity = 2,
                            Ticker = "MXRF11",
                            Total = 20f
                        },
                        new
                        {
                            Id = 2,
                            AveragePrice = 10f,
                            CurrentQuote = 15f,
                            Date = new DateTime(2001, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = 1,
                            Profit = 10f,
                            Quantity = 2,
                            Ticker = "HGLG11",
                            Total = 20f
                        });
                });

            modelBuilder.Entity("investAPI.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AveragePrice")
                        .HasColumnType("REAL");

                    b.Property<float>("CurrentQuote")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderType")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Profit")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AveragePrice = 10f,
                            CurrentQuote = 15f,
                            Date = new DateTime(2001, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = 1,
                            Profit = 105f,
                            Quantity = 2,
                            Ticker = "CEMIG3 api",
                            Total = 20f
                        },
                        new
                        {
                            Id = 2,
                            AveragePrice = 10f,
                            CurrentQuote = 15f,
                            Date = new DateTime(2001, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = 1,
                            Profit = 10f,
                            Quantity = 2,
                            Ticker = "WEG3",
                            Total = 20f
                        });
                });

            modelBuilder.Entity("investAPI.Models.Yield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("DividendYield")
                        .HasColumnType("REAL");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.Property<int>("YieldType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Yields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2001, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DividendYield = 0.59999999999999998,
                            Ticker = "MXRF11",
                            Value = 2.5,
                            YieldType = 0
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2001, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DividendYield = 0.40000000000000002,
                            Ticker = "HGLG11",
                            Value = 1.8,
                            YieldType = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
